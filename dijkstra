// adj[parent] = {child, weight}
vector<int> dijkstra(int source, int n, vector<vector<int>>& adj) {
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
        vector<int> dist(n, 1e9);

        dist[source] = 0;
        pq.push({0, source});
        
        while (!pq.empty()) {
            auto curr = pq.top();
            pq.pop();
            auto node = curr.second;
            auto disTillNow = curr.first;

            for (auto it : adj[node]) {
                auto child = it[0];
                auto edgeWeight = it[1];

                if (disTillNow + edgeWeight < dist[child]) {
                    dist[child] = disTillNow + edW;
                    pq.push({dist[child], child});
                }
            }
        }
     return dist;
    }
